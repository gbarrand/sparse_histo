// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file inlib.license for terms.

#ifndef inlib_cmathT
#define inlib_cmathT

#include <cmath>

namespace inlib {

inline float _pow(float a_x,float a_y) {return ::powf(a_x,a_y);}
inline double _pow(double a_x,double a_y) {return ::pow(a_x,a_y);}
inline long double _pow(long double a_x,long double a_y) {return ::powl(a_x,a_y);}

inline float _exp(float a_x) {return ::expf(a_x);}
inline double _exp(double a_x) {return ::exp(a_x);}
inline long double _exp(long double a_x) {return ::expl(a_x);}

inline float _log(float a_x) {return ::logf(a_x);}
inline double _log(double a_x) {return ::log(a_x);}
inline long double _log(long double a_x) {return ::logl(a_x);}

inline float _sqrt(float a_x) {return ::sqrtf(a_x);}
inline double _sqrt(double a_x) {return ::sqrt(a_x);}
inline long double _sqrt(long double a_x) {return ::sqrtl(a_x);}

inline float _cos(float a_x) {return ::cosf(a_x);}
inline double _cos(double a_x) {return ::cos(a_x);}
inline long double _cos(long double a_x) {return ::cosl(a_x);}

inline float _sin(float a_x) {return ::sinf(a_x);}
inline double _sin(double a_x) {return ::sin(a_x);}
inline long double _sin(long double a_x) {return ::sinl(a_x);}

inline float _fabs(float a_x) {return ::fabsf(a_x);}
inline double _fabs(double a_x) {return ::fabs(a_x);}
inline long double _fabs(long double a_x) {return ::fabsl(a_x);}

inline float _tan(float a_x) {return ::tanf(a_x);}
inline double _tan(double a_x) {return ::tan(a_x);}
inline long double _tan(long double a_x) {return ::tanl(a_x);}

inline void _half_pi(float& a_v) {a_v = float(1.5707963267948965580E0);}
inline void _half_pi(double& a_v) {a_v = 1.5707963267948965580E0;}
inline void _half_pi(long double& a_v) {a_v = 1.5707963267948965580E0;}

inline void _pi(float& a_v) {a_v = float(3.1415926535897931160E0);}
inline void _pi(double& a_v) {a_v = 3.1415926535897931160E0;}
inline void _pi(long double& a_v) {a_v = 3.1415926535897931160E0;}

}

#endif
